##################################################################

August 5, 2014

Notes on how I arranged TCGA data


##################################################################
Okay, it is important to note that I downloaded the TCGA Prostate cancer data in two separate
batches: 

batch 1 = CNV, DNA methylation, Protein Expression, miRNASeq, and clinical information
batch 2 = RNASeqV2

It is important to make this distinction because each batch contains a file manifest file that pairs the filnames with the TCGA sample barcodes. 


TCGA has this wonderful idea of saving the RNASeq files not by TCGA barcode but by the UUID. Nice. >.>
Now I have to write a couple of scripts to rename these files so that I can create one huge giant matrix
for gene expression analysis, where the columns of the matrix are the names of the samples.

This is a brief outline of how I will create a series matrix:
1. Create a file containing the UUIDs of all RNASeqV2 samples
2. Create a file containing the UUIDs and TCGA sample barcodes of all samples
3. Use a python script to merge the two files (this will weed out samples that weren't sequenced)
4. Use a shell script to rename the files based on the python merging script output
5. Use R script to create series matrix
6. Use R script for gene expression analysis

###################################################################

# 1. Creating a file containing the UUIDS of all RNASeqV2 samples:

####################################################################
#used 'ls' to create a file with all filenames in "RNASeqV2/UNC_IlluminaHiSeq_RNASeqV2/Level_3" folder
#saved file in '/home/ayeka/Desktop/TCGAprostate/ImportantFiles/RNASeqfilenames.csv'

#used "grep -e .rsem.genes.normalized_results /home/ayeka/Desktop/TCGAprostate/ImportantFiles/RNASeqfilenames.csv > /home/ayeka/Desktop/TCGAprostate/ImportantFiles/normalizepart1.csv' " to subset all filenames that have the 
.rsem.genes.normalized_resuts extension and saved this list of file names in "normalizepart1.csv"

#used "cut -d . /home/ayeka/Desktop/TCGAprostate/ImportantFiles/normalizepart1.csv -f3 > /home/ayeka/Desktop/TCGAprostate/ImportantFiles/normalizepart2.csv" to only obtain the UUIDs from each filename


###################################################################

# 2. Creating a file containing the UUIDS of all RNASeqV2 samples:

####################################################################
#used Excel to copy the second column of 'FILE_SAMPLE_MAP.txt' in the RNASeqV2 data
#saved file as 'home/ayeka/Desktop/TCGAprostate/ImportantFiles/barcode.csv'

#used "cut -d\- /home/ayeka/Desktop/TCGAprostate/ImportantFiles/barcode.csv -f1,2,3,4 > /home/ayeka/Desktop/TCGAprostate/ImportantFiles/barcode2.csv" 
#used Excel to copy the column in 'barcode2.csv' over the second column in 'FILE_SAMPLE_MAP.txt' and saved this
file as '/home/ayeka/Desktop/TCGAprostate/ImportantFiles/replacement1.csv'
#used 'iconv -f UTF7 -t UTF8 /home/ayeka/Desktop/TCGAprostate/ImportantFiles/replacement1.csv' to make sure that I use the same character formats during the merging process

###################################################################

# 3. Using a python script to merge the two files:

####################################################################
#used python script  'filemergingscript4.ipynb' to merge the files
#merged based on UUID contained in 'normalizedpart1.csv'
#'replacement3.txt' was generated and saved with the other files
#used 'cut -d, /home/ayeka/Desktop/TCGAprostate/ImportantFiles/replacement3.txt -f1 > /home/ayeka/Desktop/TCGAprostate/ImportantFiles/part1.csv; cut -d, /home/ayeka/Desktop/TCGAprostate/ImportantFiles/replacement3.txt -f3 > /home/ayeka/Desktop/TCGAprostate/ImportantFiles/part2.csv' are the files that I need for the 'rename.sh' script

#didn't like the '-' at the end of the TCGA barcode so I used sed s/"- '"//g part2.csv > newpart2.csv
#used Excel to change all '-' to ',' and saved file as 'newpart2_1.csv'

#opened 'newpart2_1.csv'. There are now four columns. I copied column 'D' and pasted it into column 'F'. 
#With column 'D' highlighted, I replaced all 'a' with a null character. Again, with column 'D' highlighted, I
#replaced all 'b' with a null character.  
#I went to this website, 'https://tcga-data.nci.nih.gov/datareports/codeTablesReport.htm', and selected 'Sample Type' in the drop-down menu and found that '01' means 'primary tumor' and '11' means 'solid tumor normal.' 
#placed this function in column 'E' to designate "normaladj" and 'tumor': =IF(D1=11,"NormAdj", "Tumor")
#saved the file as 'newpart2_1.xlsx'

#copied column 'E' from 'newpart2_1.xlsx' and pasted it AS PLAIN TEXT into column 'B' of file 'newpart2.csv'
#sorted column 'A' in ascending order and saved this file as 'newpart2_2.xlsx'

#opened 'genesdirfilenames.csv' and copied columns 'A' and 'B' from 'newpart2_2.xlsx' into columns 'B' and 'C' of 'genesdirfilenames.csv'
#in row 472 for columns 'B' and 'C', I entered the string 'empty'
#selecting column 'B' and 'C' at row 472, I copied this entry to the last file name in column 'A'
#saved the file as 'genesdirfilenamescomplete.csv'


###################################################################

# 4. Using a shell script to rename the files:

####################################################################
#to ensure that I don't mess up the original files, I copied the 
# RNASeqV2 files to the 'genes' folder
#used the 'rename.sh' script to rename the filenames in the 'genes' folder
#all filenames in the 'genes' folder are now renamed with the TCGA barcode.

#created a file named 'genesdirfilenames.csv' to use for the next step

#removed "[Not Available], [Not Applicable], [Uknown] and character space ' '"  values in the 'nationwidechildrens.org_clinical_patient_prad.txt' file in Excel

###################################################################

# 5. Using an R script to create a series matrix:

####################################################################
#used the 'seriesmatrix.txt' file to create a series matrix and newpheno files


###################################################################

# 6. Using an R script for gene expression analysis:

####################################################################
#used the 'seriesmatrix.txt' file to create a series matrix and newpheno files
